// <auto-generated />
using System;
using BA.CarWashingApp.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BA.CarWashingApp.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.DirtStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MaterialFactor")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("PriceFactor")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TimeFactor")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("Id");

                    b.ToTable("DirtStatuses");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RemainingLeave")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<DateTime>("ShiftEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftStartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SystemUserId")
                        .HasColumnType("int");

                    b.Property<int>("TotalLeave")
                        .HasColumnType("int");

                    b.Property<int>("UsedLeave")
                        .HasColumnType("int");

                    b.Property<int>("WashingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SystemUserId");

                    b.HasIndex("WashingId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MinStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Stock")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.MaterialWashingRecipe", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("WashingRecipeId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("MaterialId", "WashingRecipeId");

                    b.HasIndex("WashingRecipeId");

                    b.ToTable("MaterialWashingRecipes");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.SystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserName");

                    b.ToTable("SystemUsers");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DirtStatusId")
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DirtStatusId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MaterialFactor")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("PriceFactor")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("TimeFactor")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Washing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RemainingTime")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("WashingRecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.HasIndex("WashingRecipeId");

                    b.ToTable("Washings");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.WashingRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PriceFactor")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("Id");

                    b.ToTable("WashingRecipes");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.WashingStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("StepTime")
                        .HasColumnType("int");

                    b.Property<int>("WashingTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WashingTypeId");

                    b.ToTable("WashingSteps");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.WashingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MaterialFactor")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TypePrice")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("TypeTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WashingTypes");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.WashingTypeWashing", b =>
                {
                    b.Property<int>("WashingId")
                        .HasColumnType("int");

                    b.Property<int>("WashingTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("WashingId", "WashingTypeId");

                    b.HasIndex("WashingTypeId");

                    b.ToTable("WashingTypeWashings");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Employee", b =>
                {
                    b.HasOne("BA.CarWashingApp.Entity.Entities.SystemUser", "SystemUser")
                        .WithMany("Employees")
                        .HasForeignKey("SystemUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BA.CarWashingApp.Entity.Entities.Washing", "Washing")
                        .WithOne("Employee")
                        .HasForeignKey("BA.CarWashingApp.Entity.Entities.Employee", "WashingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SystemUser");

                    b.Navigation("Washing");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.MaterialWashingRecipe", b =>
                {
                    b.HasOne("BA.CarWashingApp.Entity.Entities.Material", "Material")
                        .WithMany("MaterialWashingRecipes")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BA.CarWashingApp.Entity.Entities.WashingRecipe", "WashingRecipe")
                        .WithMany("MaterialWashingRecipes")
                        .HasForeignKey("WashingRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("WashingRecipe");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Vehicle", b =>
                {
                    b.HasOne("BA.CarWashingApp.Entity.Entities.Customer", "Customer")
                        .WithMany("Vehicles")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BA.CarWashingApp.Entity.Entities.DirtStatus", "DirtStatus")
                        .WithMany("Vehicles")
                        .HasForeignKey("DirtStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BA.CarWashingApp.Entity.Entities.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("DirtStatus");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Washing", b =>
                {
                    b.HasOne("BA.CarWashingApp.Entity.Entities.Vehicle", "Vehicle")
                        .WithOne("Washing")
                        .HasForeignKey("BA.CarWashingApp.Entity.Entities.Washing", "VehicleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BA.CarWashingApp.Entity.Entities.WashingRecipe", "WashingRecipe")
                        .WithMany("Washings")
                        .HasForeignKey("WashingRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");

                    b.Navigation("WashingRecipe");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.WashingStep", b =>
                {
                    b.HasOne("BA.CarWashingApp.Entity.Entities.WashingType", "WashingType")
                        .WithMany("WashingSteps")
                        .HasForeignKey("WashingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WashingType");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.WashingTypeWashing", b =>
                {
                    b.HasOne("BA.CarWashingApp.Entity.Entities.Washing", "Washing")
                        .WithMany("WashingTypeWashings")
                        .HasForeignKey("WashingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BA.CarWashingApp.Entity.Entities.WashingType", "WashingType")
                        .WithMany("WashingTypeWashings")
                        .HasForeignKey("WashingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Washing");

                    b.Navigation("WashingType");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Customer", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.DirtStatus", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Material", b =>
                {
                    b.Navigation("MaterialWashingRecipes");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.SystemUser", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Vehicle", b =>
                {
                    b.Navigation("Washing")
                        .IsRequired();
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.VehicleType", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.Washing", b =>
                {
                    b.Navigation("Employee")
                        .IsRequired();

                    b.Navigation("WashingTypeWashings");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.WashingRecipe", b =>
                {
                    b.Navigation("MaterialWashingRecipes");

                    b.Navigation("Washings");
                });

            modelBuilder.Entity("BA.CarWashingApp.Entity.Entities.WashingType", b =>
                {
                    b.Navigation("WashingSteps");

                    b.Navigation("WashingTypeWashings");
                });
#pragma warning restore 612, 618
        }
    }
}
